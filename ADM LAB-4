{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMI2ukrXzjpzF+54Y00e86K",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/2303a51658/2303a51658-AIML.-/blob/main/ADM%20LAB-4\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "18VhhWeXUzVE",
        "outputId": "b79b8e79-8137-4212-fc5e-74b76f3b8eeb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Category_A  Category_B  Category_C\n",
            "0        True       False       False\n",
            "1       False        True       False\n",
            "2       False       False        True\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = {'Category': ['A', 'B', 'C']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "df_encoded = pd.get_dummies(df, columns=['Category'])\n",
        "print(df_encoded)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "\n",
        "data = {'Category': ['A', 'B', 'C']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "label_encoder = LabelEncoder()\n",
        "df['Category_encoded'] = label_encoder.fit_transform(df['Category'])\n",
        "print(df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dU444PF2VZFf",
        "outputId": "36ad036b-1093-42c2-a7d1-7db2a02276e5"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  Category  Category_encoded\n",
            "0        A                 0\n",
            "1        B                 1\n",
            "2        C                 2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from datetime import datetime\n",
        "\n",
        "data = {'Name': ['John', 'Alice', 'Bob'],\n",
        "        'Date_of_Birth': ['1990-01-01', '1985-05-12', '2000-07-23']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "df['Date_of_Birth'] = pd.to_datetime(df['Date_of_Birth'])\n",
        "\n",
        "df['Age'] = df['Date_of_Birth'].apply(lambda x: datetime.now().year - x.year)\n",
        "print(df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s9srjn9ZVk1y",
        "outputId": "d9e0e1ed-099e-429e-afe1-b396d89a70de"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Name Date_of_Birth  Age\n",
            "0   John    1990-01-01   35\n",
            "1  Alice    1985-05-12   40\n",
            "2    Bob    2000-07-23   25\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "data = {'Category': ['A', 'A', 'B', 'B'],\n",
        "        'Values': [10, 20, 10, 30]}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "grouped_df = df.groupby('Category').sum().reset_index()\n",
        "print(grouped_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hVoWypDJVvR5",
        "outputId": "122482df-adde-48b6-bdcb-c29120a4d195"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  Category  Values\n",
            "0        A      30\n",
            "1        B      40\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "data = {'Category': ['A', 'A', 'B', 'B'],\n",
        "        'Subcategory': ['X', 'Y', 'X', 'Y'],\n",
        "        'Values': [10, 20, 10, 30]}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "\n",
        "pivot_df = pd.pivot_table(df, values='Values', index='Category', columns='Subcategory', aggfunc='sum').reset_index()\n",
        "print(pivot_df)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "19Xu_2ygV5eE",
        "outputId": "300ad0bb-e978-4ca5-fe83-149b5be26ea9"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Subcategory Category   X   Y\n",
            "0                  A  10  20\n",
            "1                  B  10  30\n"
          ]
        }
      ]
    }
  ]
}